name: CI/CD - Build -> Push ACR -> Deploy to AKS
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: infinion-weather-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_full: ${{ steps.set-vars.outputs.image_full }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build project
        run: dotnet build ./infinion-weather-api/InfinionDevOps.csproj --configuration Release

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR login server
        id: acr
        run: |
          echo "login_server=$(az acr show -n ${{ secrets.ACR_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --query loginServer -o tsv)" >> $GITHUB_OUTPUT

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.acr.outputs.login_server }}

      - name: Build & push Docker image
        id: docker
        uses: docker/build-push-action@v5
        with:
          context: ./infinion-weather-api
          file: ./infinion-weather-api/Dockerfile
          push: true
          tags: |
            ${{ steps.acr.outputs.login_server }}/${{ env.IMAGE_NAME }}:latest
            ${{ steps.acr.outputs.login_server }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Set output image
        id: set-vars
        run: |
          echo "image_full=${{ steps.acr.outputs.login_server }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}

      - name: Deploy to AKS
        env:
          IMAGE_FULL: ${{ needs.build-and-push.outputs.image_full }}
        run: |
          kubectl apply -f k8s/namespace.yaml
          sed "s#REPLACE_WITH_ACR_LOGIN#${{ secrets.ACR_NAME }}.azurecr.io#g; s#REPLACE_TAG#${{ github.sha }}#g" k8s/deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/service.yaml
          kubectl -n infinion rollout status deployment/infinion-weather-api
